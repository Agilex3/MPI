@page "/"
@using System.Net.Http.Json;
@using System.ComponentModel.DataAnnotations
@using Catalogue.Models

@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3 class="text-xl font-bold mb-4 text-center">Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-red-500 text-sm text-center mb-2">@ErrorMessage</p>
}

<EditForm Model="@loginModel" OnSubmit="HandleSubmit" FormName="cv">
    <DataAnnotationsValidator />
    <div class="space-y-4">
        <input type="email" class="w-full p-2 border rounded" placeholder="Email"
               @bind="loginModel.Email" required />
        <input type="password" class="w-full p-2 border rounded" placeholder="Password"
               @bind="loginModel.Password" required />

        <button type="submit" class="w-full bg-blue-500 text-white p-2 rounded" @onclick="OnLoginClick">Login</button>
    </div>
</EditForm>

<p class="text-sm text-center mt-4">
    Don't have an account? <a href="/signup" class="text-blue-500">Sign up</a>
</p>

<p class="text-sm text-center mt-4">
    Forgot password? <a href="/resetpassword" class="text-blue-500">Change password</a>
</p>

@code {
    private LoginModel loginModel = new LoginModel(); 
    private string ErrorMessage;

    private async Task HandleSubmit()
    {
        if (string.IsNullOrEmpty(loginModel.Email) || string.IsNullOrEmpty(loginModel.Password))
        {
            ErrorMessage = "Email and Password are required.";
            return;
        }

        ErrorMessage = null;

        if (Http.BaseAddress == null)
        {
            Http.BaseAddress = new Uri(Navigation.BaseUri);
        }

        try
        {
            var request = new HttpRequestMessage(HttpMethod.Post, "api/auth/login")
                {
                    Content = JsonContent.Create(loginModel)
                };

            var response = await Http.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<ResponseMessage>();
                Navigation.NavigateTo("/home");
            }
            else
            {
                var errorText = await response.Content.ReadAsStringAsync();
                ErrorMessage = !string.IsNullOrWhiteSpace(errorText) ? errorText : "Login failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred. Please try again later.";
        }
    }

    private void OnLoginClick()
    {
        loginModel.Email = loginModel.Email?.Trim();
        loginModel.Password = loginModel.Password?.Trim();
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = string.Empty;
    }

}
