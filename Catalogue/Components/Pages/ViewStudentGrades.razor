@page "/viewstudentgrades"
@using System.Net.Http.Json;
@using Catalogue.Services
@using Catalogue.Models
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject UserSessionService UserSessionService
@inject NavigationManager Navigation

<h3 class="text-xl font-bold mb-4 text-center">Manage Grades</h3>
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-red-500 text-sm text-center mb-2">@ErrorMessage</p>
}

@if (grades != null && grades.Any())
{
    <table class="table-auto w-full mt-4 border">
        <thead>
            <tr>
                <th class="border px-4 py-2">Course</th>
                <th class="border px-4 py-2">Grade</th>
                <th class="border px-4 py-2">Graded At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var grade in grades)
            {
                @if (UserSessionService.UserId == grade.Student.id)
                {
                    <tr>
                        <td class="border px-4 py-2">@grade.Course.Name</td>
                        <td class="border px-4 py-2">@grade.GradeValue</td>
                        <td class="border px-4 py-2">@grade.GradedAt.ToShortDateString()</td>
                    </tr>
                }      
            }
        </tbody>
    </table>
}
else
{
    <p class="text-center mt-4">No grades available.</p>
}
@code {
    private string ErrorMessage;
    private List<Grade> grades;

    protected override async Task OnInitializedAsync()
    {
        await LoadGrades();
    }

    private async Task LoadGrades()
    {

        if (Http.BaseAddress == null)
        {
            Http.BaseAddress = new Uri(Navigation.BaseUri);
        }
        grades = await Http.GetFromJsonAsync<List<Grade>>("api/GradeApi");
    }
}
